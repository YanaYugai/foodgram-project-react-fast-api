name: Main Foodgram Workflow
on:
  push:
    branches:
      - master
      - githubworkflows
      - Follow
jobs:
  linters:
    runs-on: ubuntu-latest
    steps:
    - name: Check out code
      uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.9
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r ./backend/requirements.txt
    - name: Check with flake8
      run: python -m flake8 backend/
    - name: Check with mypy
      run: |
        python -m pip install types-psycopg2
        python -m pip install types-fpdf2
        python -m mypy --ignore-missing-imports --exclude backend/alembic/ backend/
  tests:
    needs: linters
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
    - name: Check out code
      uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.9
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r ./backend/requirements.txt
    - name: Test users and follows
      run: |
        touch .env
        echo DB_HOST=${{ secrets.DB_HOST }} >> .env
        echo DB_PORT=${{ secrets.DB_PORT }} >> .env
        echo DB_NAME=${{ secrets.DB_NAME }} >> .env
        echo DB_USER=${{ secrets.DB_USER }} >> .env
        echo DB_PASS=${{ secrets.DB_PASS }} >> .env
        echo SECRET_KEY=${{ secrets.SECRET_KEY }} >> .env
        echo MINUTES=${{ secrets.MINUTES }} >> .env
        cat .env
        cd backend/
        python -m alembic upgrade head
        python -m download.py
        cd ..
        cd tests/
        python -m pytest
